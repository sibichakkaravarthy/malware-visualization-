

from PIL import Image
from math import sqrt as s
from math import ceil as c

import sys
import glob
import errno
import os
from os import walk
import numpy,scipy, os, array,sys
import scipy.misc
import shutil


#### the code is forked and modified from Byteimg #####
#### https://github.com/Peaser/byteimg ################

warning = """Usage: python malwareviz.py True/False

Boolean (True or False) is for my "color compression".

Color compression...
If True:
    Take every 3 pixels (black/white)...
    Combines them into a single colored pixel. 
    Reduces size by about 1/3.

If False:
    Renders an image that is about 2x larger, and monochromatic
    Can yield interesting results.
"""


#try:
Color_compressed = eval(sys.argv[1])
    #filename = sys.argv[2]
#except:
    #print warning
    #sys.exit(0)


def nto3tup(n):
    """Convert n to (n,n,n)"""
    return (n,n,n)

def hexn(s):
    """hex to integer"""
    return int(float.fromhex(s))

def chop(object,length):
    """ Slice up an item by character amount (length) """
    return [object[i:i+length] for i in range(0, len(object), length)]

def main():

    path = 'F:/Sibi/Networking/Sample/'
    newpath1='F:/Sibi/Networking/Image/'
    
    print "Working..."
    
    for (dirname, dirs, files) in walk(path):
        for filename in files:
            thefile = os.path.join(dirname,filename)
            data = open(thefile, 'rb').read()
            ln = os.path.getsize(thefile)
            print "Dealing with {0} bytes from {1}... (Compression = {2})".format(len(data), filename, Color_compressed)

            stoof = [hexn(i.encode('hex')) for i in data]

            if Color_compressed:
                newdata = [tuple(i) for i in chop(stoof, 3) if len(i) == 3] #Combining 3 grey pixels into one colored pixel
            else:
        	newdata = [nto3tup(i) for i in stoof]  #staying grey


            img = Image.new('RGB',
                   (int(c(s(len(newdata)))), int(c(s(len(newdata))))), #messy way of making a square (sorry)
                    'white')
            newpath=newpath1+str(filename)
            print newpath
            
##            if not os.path.exists(newpath):
##                os.makedirs(newpath)
##                os.chdir(newpath)
##                img.putdata(newdata)
##                img.save(filename+'.png')

            if os.path.exists(newpath):
                shutil.rmtree(newpath)
                os.makedirs(newpath)
                os.chdir(newpath)
                img.putdata(newdata)
                img.save(filename+'.png')
            else:
                os.makedirs(newpath)
                os.chdir(newpath)
                img.putdata(newdata)
                img.save(filename+'.png')
                
                #scipy.misc.imsave(str(filename)+'.png',im1)

                #img.putdata(newdata)

                #img.save(filename+'.png')

if __name__ == "__main__":
    main()
